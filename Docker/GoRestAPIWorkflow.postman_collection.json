{
	"info": {
		"_postman_id": "6233a395-b36b-4f89-a678-08473956c5b5",
		"name": "GoRestAPIWorkflow",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37194489",
		"_collection_link": "https://www.postman.com/singhaldevesh/workspace/76c8928d-4c43-4982-aae4-1bad2b93b6ec/collection/37194489-6233a395-b36b-4f89-a678-08473956c5b5?action=share&source=collection_link&creator=37194489"
	},
	"item": [
		{
			"name": "1-GetAllUsers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test cases:\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{tokenID}}"
					}
				],
				"url": {
					"raw": "{{GlobalbaseURL}}/public/v2/users",
					"host": [
						"{{GlobalbaseURL}}"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "2- CreateAUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"  \r",
							"  const response = pm.response.json();\r",
							"  const user_id = response.id;\r",
							" console.log(\"user id value =======>   \" + user_id);\r",
							" pm.variables.set(\"userID\" , user_id);\r",
							"\r",
							"\r",
							"\r",
							"// test cases:\r",
							"//1.\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{tokenID}}"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"postmanautomation_{{$randomEmail}}\",\r\n    \"status\": \"inactive\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/public/v2/users",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "3- GetAUserById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test cases:\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test (\"check that userID is fetched correctly\" , function () {\r",
							"        const newuserID =  pm.variables.get(\"userID\");\r",
							"         const jsonData= pm.response.json();\r",
							"          pm.expect(jsonData.id).to.eql(newuserID);\r",
							"\r",
							"\r",
							"}) ;"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{tokenID}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/public/v2/users/{{userID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{userID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "4- UpdateAUserById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql(\"inactive\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{tokenID}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\r\n {\r\n\t\"status\": \"inactive\" }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/public/v2/users/{{userID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{userID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "5-DeleteAUserById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{tokenID}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/public/v2/users/{{userID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{userID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "1- Login API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"           const response = pm.response.json() ;\r",
							"           const tokenID =    response.token;\r",
							"           console.log (\"token id is : \" + tokenID );\r",
							"           pm.collectionVariables.set(\"mytokenId\" , tokenID);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\"email\":\"{{email}}\",\r\n\r\n\"password\":\"Bsl@135#\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a User By id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"// pm.test(\"Is user status updated\", function () {\r",
							"//     var jsonData = pm.response.json();\r",
							"//     pm.expect(jsonData.status).to.eql (pm.iterationData.get (\"newstatus\"))\r",
							"// });"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{tokenID}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\r\n \"status\" : \"active\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/public/v2/users/{{userID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{userID}}"
					]
				}
			},
			"response": []
		}
	]
}