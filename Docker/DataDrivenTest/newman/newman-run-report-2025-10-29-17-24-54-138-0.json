{
  "collection": {
    "_": {
      "postman_id": "7cfba7d8-6d49-494c-81bb-e305a7ebc6bd",
      "exporter_id": "37194489",
      "collection_link": "https://www.postman.com/singhaldevesh/workspace/76c8928d-4c43-4982-aae4-1bad2b93b6ec/collection/37194489-7cfba7d8-6d49-494c-81bb-e305a7ebc6bd?action=share&source=collection_link&creator=37194489"
    },
    "item": [
      {
        "id": "158da884-e376-4794-9375-06f235cd4be6",
        "name": "Create User by Data file",
        "request": {
          "url": {
            "path": [
              "public",
              "v2",
              "users"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "{{tokenID}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "\r\n// name, gender and status is being fetched from csv file - file name is UserDataFile\r\n\r\n{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a6a1a428-f340-43b6-b301-c6dfa3ef38a9",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Status code is 201\", function () {\r",
                "\tpm.response.to.have.status(201);\r",
                "});\r",
                "\r",
                "\r",
                "pm.test(\"Check user response data\", function () {\r",
                "\tvar jsonData = pm.response.json();\r",
                "\tpm.expect(jsonData.name).to.eql (pm.iterationData.get(\"name\"));\r",
                "\t\tpm.expect(jsonData.gender).to.eql (pm.iterationData.get(\"gender\"));\r",
                "\t\tpm.expect(jsonData.status).to.eql (pm.iterationData.get(\"status\"));\r",
                "           \r",
                "           \r",
                "// FETCH THE EXPECTED EMAIL:\r",
                "\t\t  const rawJSONRequestBody =  pm.request.body.raw ; // JSON string fetched\r",
                "\t\t\t // convert json string to javascript object \r",
                "\t\t\t      const requestBody =  JSON.parse(rawJSONRequestBody);\r",
                "\t\t\t     const expectedemail =   requestBody.email;\r",
                "\t\t\t\t\t console.log (\"expected email ======= \" + expectedemail);\r",
                "\t\t\t\t\t pm.expect(jsonData.email).to.eql(expectedemail);\r",
                "\r",
                "});\r",
                "\r",
                "\r",
                "                const response = pm.response.json();\r",
                "                 const userID = response.id ; \r",
                "                 pm.variables.set(\"user_id\" ,userID ) ; \r",
                "\r",
                "   \r",
                "\r",
                "\t\t\t\t\t\t\t  \r",
                "\r",
                "\r",
                "\r",
                "\r",
                "\r",
                "\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "d260df51-92c6-47cc-acd1-3620aae663ed"
            }
          }
        ]
      },
      {
        "id": "9f0aae1a-dd7b-4490-b2a7-981f5eeb18ef",
        "name": "Update a User By id",
        "request": {
          "url": {
            "path": [
              "public",
              "v2",
              "users",
              "{{user_id}}"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "{{tokenID}}"
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "\r\n{\r\n \"status\" : \"{{newstatus}}\"\r\n\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "437b66fb-9e6a-4bc7-b8ff-0e99aa1efb9a",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "\r",
                "\r",
                "pm.test(\"Status code is 200\", function () {\r",
                "    pm.response.to.have.status(200);\r",
                "});\r",
                "\r",
                "\r",
                "pm.test(\"Is user status updated\", function () {\r",
                "    var jsonData = pm.response.json();\r",
                "    pm.expect(jsonData.status).to.eql (pm.iterationData.get (\"newstatus\")) ;\r",
                "});"
              ],
              "_lastExecutionId": "1e376730-fb6d-4204-9010-b4dea6b884c2"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "7cfba7d8-6d49-494c-81bb-e305a7ebc6bd",
      "name": "Data Driven Test of API",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2025-10-29T11:32:30.633Z",
      "postman_exported_using": "Postman/11.69.2"
    },
    "id": "c20f35a4-84dd-4d87-a775-8e5bafe189a1",
    "name": "GoRestEnv",
    "values": [
      {
        "type": "any",
        "value": "https://gorest.co.in",
        "key": "baseURL"
      },
      {
        "type": "any",
        "value": "Bearer c257939495ba279bcf061d9ff92cf04ba1132364f95eda2484cba0136dfec383",
        "key": "tokenID"
      }
    ]
  },
  "globals": {
    "id": "b16dc868-c797-4346-abd6-6b0d94a29252",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 625.5,
      "responseMin": 479,
      "responseMax": 1232,
      "responseSd": 273.39577538798954,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1761758690085,
      "completed": 1761758694012
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 2,
          "cycles": 3,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "56a3985e-2d37-4a55-9874-fa9b2c2770b6",
          "httpRequestId": "b1745fe8-9195-4bec-9e85-f860746a7d50"
        },
        "item": {
          "id": "158da884-e376-4794-9375-06f235cd4be6",
          "name": "Create User by Data file",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "\r\n// name, gender and status is being fetched from csv file - file name is UserDataFile\r\n\r\n{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a6a1a428-f340-43b6-b301-c6dfa3ef38a9",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "\tpm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Check user response data\", function () {\r",
                  "\tvar jsonData = pm.response.json();\r",
                  "\tpm.expect(jsonData.name).to.eql (pm.iterationData.get(\"name\"));\r",
                  "\t\tpm.expect(jsonData.gender).to.eql (pm.iterationData.get(\"gender\"));\r",
                  "\t\tpm.expect(jsonData.status).to.eql (pm.iterationData.get(\"status\"));\r",
                  "           \r",
                  "           \r",
                  "// FETCH THE EXPECTED EMAIL:\r",
                  "\t\t  const rawJSONRequestBody =  pm.request.body.raw ; // JSON string fetched\r",
                  "\t\t\t // convert json string to javascript object \r",
                  "\t\t\t      const requestBody =  JSON.parse(rawJSONRequestBody);\r",
                  "\t\t\t     const expectedemail =   requestBody.email;\r",
                  "\t\t\t\t\t console.log (\"expected email ======= \" + expectedemail);\r",
                  "\t\t\t\t\t pm.expect(jsonData.email).to.eql(expectedemail);\r",
                  "\r",
                  "});\r",
                  "\r",
                  "\r",
                  "                const response = pm.response.json();\r",
                  "                 const userID = response.id ; \r",
                  "                 pm.variables.set(\"user_id\" ,userID ) ; \r",
                  "\r",
                  "   \r",
                  "\r",
                  "\t\t\t\t\t\t\t  \r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "d260df51-92c6-47cc-acd1-3620aae663ed"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer c257939495ba279bcf061d9ff92cf04ba1132364f95eda2484cba0136dfec383"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fbdf8677-9829-43bb-8232-58b65e487f51",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "117",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "\r\n\n\r\n{\r\n    \"name\": \"rajat\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"Chelsey69@yahoo.com\",\r\n    \"status\": \"inactive\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "72e04263-db39-4cd0-a401-ca6d311dcca0",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 29 Oct 2025 17:25:52 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "95"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"0b719cc30e82be3118a216b908ca0c49\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "location",
              "value": "https://gorest.co.in/public/v2/users/8216572"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "86"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "1"
            },
            {
              "key": "x-request-id",
              "value": "2f46f2dc-1431-4522-a261-7286072b3445"
            },
            {
              "key": "x-runtime",
              "value": "0.082609"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Nel",
              "value": "{\"report_to\":\"cf-nel\",\"success_fraction\":0.0,\"max_age\":604800}"
            },
            {
              "key": "Report-To",
              "value": "{\"group\":\"cf-nel\",\"max_age\":604800,\"endpoints\":[{\"url\":\"https://a.nel.cloudflare.com/report/v4?s=h6YrI37eW2DDjQo%2Bz%2Fpz%2FBtz0VZNe4RTG8aRULXpcUcPzvIgeDdBRDHXhRIRDNOZf4MABYt8v301nXDV3GWNL%2FQDKY0%2BokhVZOcpqg%3D%3D\"}]}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "99645fe9af42e215-MRS"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              56,
              50,
              49,
              54,
              53,
              55,
              50,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              114,
              97,
              106,
              97,
              116,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              67,
              104,
              101,
              108,
              115,
              101,
              121,
              54,
              57,
              64,
              121,
              97,
              104,
              111,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              105,
              110,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1232,
          "responseSize": 95
        },
        "id": "158da884-e376-4794-9375-06f235cd4be6",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Check user response data",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2fa1f00f-2533-42a3-9054-751727ec037b",
          "length": 2,
          "cycles": 3,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dee16ae0-fd0c-4510-864b-ac891152918c"
        },
        "item": {
          "id": "9f0aae1a-dd7b-4490-b2a7-981f5eeb18ef",
          "name": "Update a User By id",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{user_id}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "\r\n{\r\n \"status\" : \"{{newstatus}}\"\r\n\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "437b66fb-9e6a-4bc7-b8ff-0e99aa1efb9a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "\r",
                  "\r",
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Is user status updated\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.status).to.eql (pm.iterationData.get (\"newstatus\")) ;\r",
                  "});"
                ],
                "_lastExecutionId": "1e376730-fb6d-4204-9010-b4dea6b884c2"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              "8216572"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer c257939495ba279bcf061d9ff92cf04ba1132364f95eda2484cba0136dfec383"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6f750158-2cd0-4f93-aa2d-b81fe899b73f",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "30",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "\r\n{\r\n \"status\" : \"active\"\r\n\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "1c30a10c-e3c7-4559-8eaf-6b8dfe316d4a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 29 Oct 2025 17:25:53 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"07193cede47fb6d45d54bfe1034bb781\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "89"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "2"
            },
            {
              "key": "x-request-id",
              "value": "f596db0b-5eac-4fe6-b91b-6055321e47ea"
            },
            {
              "key": "x-runtime",
              "value": "0.116424"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Nel",
              "value": "{\"report_to\":\"cf-nel\",\"success_fraction\":0.0,\"max_age\":604800}"
            },
            {
              "key": "Report-To",
              "value": "{\"group\":\"cf-nel\",\"max_age\":604800,\"endpoints\":[{\"url\":\"https://a.nel.cloudflare.com/report/v4?s=cl89jcu%2ByKIYQ190kaUr2OJXcANzEu0W98XP8kA4nDUoVAuIWYN3XAEY63oTspwu4YqaRO8EBJgFbcvc0WtYu03zMijoCD4Qt97qmw%3D%3D\"}]}"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "99645feebd23e215-MRS"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              56,
              50,
              49,
              54,
              53,
              55,
              50,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              114,
              97,
              106,
              97,
              116,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              67,
              104,
              101,
              108,
              115,
              101,
              121,
              54,
              57,
              64,
              121,
              97,
              104,
              111,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 579,
          "responseSize": 93
        },
        "id": "9f0aae1a-dd7b-4490-b2a7-981f5eeb18ef",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Is user status updated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "832d9cc8-7db2-496f-9bd7-28ede1a9de5d",
          "length": 2,
          "cycles": 3,
          "position": 0,
          "iteration": 1,
          "cr": true,
          "httpRequestId": "b959075f-68de-47c4-9721-5f4e4d667290"
        },
        "item": {
          "id": "158da884-e376-4794-9375-06f235cd4be6",
          "name": "Create User by Data file",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "\r\n// name, gender and status is being fetched from csv file - file name is UserDataFile\r\n\r\n{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a6a1a428-f340-43b6-b301-c6dfa3ef38a9",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "\tpm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Check user response data\", function () {\r",
                  "\tvar jsonData = pm.response.json();\r",
                  "\tpm.expect(jsonData.name).to.eql (pm.iterationData.get(\"name\"));\r",
                  "\t\tpm.expect(jsonData.gender).to.eql (pm.iterationData.get(\"gender\"));\r",
                  "\t\tpm.expect(jsonData.status).to.eql (pm.iterationData.get(\"status\"));\r",
                  "           \r",
                  "           \r",
                  "// FETCH THE EXPECTED EMAIL:\r",
                  "\t\t  const rawJSONRequestBody =  pm.request.body.raw ; // JSON string fetched\r",
                  "\t\t\t // convert json string to javascript object \r",
                  "\t\t\t      const requestBody =  JSON.parse(rawJSONRequestBody);\r",
                  "\t\t\t     const expectedemail =   requestBody.email;\r",
                  "\t\t\t\t\t console.log (\"expected email ======= \" + expectedemail);\r",
                  "\t\t\t\t\t pm.expect(jsonData.email).to.eql(expectedemail);\r",
                  "\r",
                  "});\r",
                  "\r",
                  "\r",
                  "                const response = pm.response.json();\r",
                  "                 const userID = response.id ; \r",
                  "                 pm.variables.set(\"user_id\" ,userID ) ; \r",
                  "\r",
                  "   \r",
                  "\r",
                  "\t\t\t\t\t\t\t  \r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "d260df51-92c6-47cc-acd1-3620aae663ed"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer c257939495ba279bcf061d9ff92cf04ba1132364f95eda2484cba0136dfec383"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "54b28ef2-9921-4993-94fc-2c633134c760",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "124",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "\r\n\n\r\n{\r\n    \"name\": \"Mayank\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"Lexi_Kuphal96@hotmail.com\",\r\n    \"status\": \"inactive\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "f8ebfd4d-efb4-4b0b-9fe8-6162fdddf39e",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 29 Oct 2025 17:25:53 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "102"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"4adb6f8e3703a669d772f521b3389cbd\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "location",
              "value": "https://gorest.co.in/public/v2/users/8216573"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "88"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "2"
            },
            {
              "key": "x-request-id",
              "value": "7120dfc4-f62f-4d4a-b8ec-ff772019051c"
            },
            {
              "key": "x-runtime",
              "value": "0.076221"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Nel",
              "value": "{\"report_to\":\"cf-nel\",\"success_fraction\":0.0,\"max_age\":604800}"
            },
            {
              "key": "Report-To",
              "value": "{\"group\":\"cf-nel\",\"max_age\":604800,\"endpoints\":[{\"url\":\"https://a.nel.cloudflare.com/report/v4?s=a%2BDcLhOSCWLPydbhpzAt3b2430DW03VXsIS9JA87FEHz%2By2VdYR5ftRKUND392adv0X%2FiyaVVZt8gQMRYG5EG83Sn4qUTFj0%2FuwLDg%3D%3D\"}]}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "99645ff27f27e215-MRS"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              56,
              50,
              49,
              54,
              53,
              55,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              97,
              121,
              97,
              110,
              107,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              76,
              101,
              120,
              105,
              95,
              75,
              117,
              112,
              104,
              97,
              108,
              57,
              54,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              105,
              110,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 485,
          "responseSize": 102
        },
        "id": "158da884-e376-4794-9375-06f235cd4be6",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Check user response data",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4ce16917-1ce3-4bf4-b6df-595fc8126e3c",
          "length": 2,
          "cycles": 3,
          "position": 1,
          "iteration": 1,
          "httpRequestId": "f12901e1-e51d-4403-bfe1-6689a64fdb0b"
        },
        "item": {
          "id": "9f0aae1a-dd7b-4490-b2a7-981f5eeb18ef",
          "name": "Update a User By id",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{user_id}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "\r\n{\r\n \"status\" : \"{{newstatus}}\"\r\n\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "437b66fb-9e6a-4bc7-b8ff-0e99aa1efb9a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "\r",
                  "\r",
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Is user status updated\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.status).to.eql (pm.iterationData.get (\"newstatus\")) ;\r",
                  "});"
                ],
                "_lastExecutionId": "1e376730-fb6d-4204-9010-b4dea6b884c2"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              "8216573"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer c257939495ba279bcf061d9ff92cf04ba1132364f95eda2484cba0136dfec383"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7e883821-d7c3-4bb3-8ef6-511deb3fdbad",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "30",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "\r\n{\r\n \"status\" : \"active\"\r\n\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "3792c1a5-a341-4864-9691-f0ae0e09a4f5",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 29 Oct 2025 17:25:54 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"e7a3559fd57db772e3671fbff2dfbd61\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "87"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "3"
            },
            {
              "key": "x-request-id",
              "value": "7b862d49-28b8-4fc1-9d37-f2f180bf2d12"
            },
            {
              "key": "x-runtime",
              "value": "0.078134"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Nel",
              "value": "{\"report_to\":\"cf-nel\",\"success_fraction\":0.0,\"max_age\":604800}"
            },
            {
              "key": "Report-To",
              "value": "{\"group\":\"cf-nel\",\"max_age\":604800,\"endpoints\":[{\"url\":\"https://a.nel.cloudflare.com/report/v4?s=Jy15qFANAqQNqg%2FTkj%2BCd97anwXQ0pVBxrw7UoMJg6v07Jw%2FBlo2sJ5R8pxmpCobTUnbMTu4aj%2F9mV3kwHGOP3p%2F7TTTwdJZO3X30A%3D%3D\"}]}"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "99645ff5afaee215-MRS"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              56,
              50,
              49,
              54,
              53,
              55,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              97,
              121,
              97,
              110,
              107,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              76,
              101,
              120,
              105,
              95,
              75,
              117,
              112,
              104,
              97,
              108,
              57,
              54,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 489,
          "responseSize": 100
        },
        "id": "9f0aae1a-dd7b-4490-b2a7-981f5eeb18ef",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Is user status updated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "66e7990c-b277-4490-8ba2-7b7f440fecd5",
          "length": 2,
          "cycles": 3,
          "position": 0,
          "iteration": 2,
          "cr": true,
          "httpRequestId": "d947d1e6-c254-4deb-8fe7-ed29f750283a"
        },
        "item": {
          "id": "158da884-e376-4794-9375-06f235cd4be6",
          "name": "Create User by Data file",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "\r\n// name, gender and status is being fetched from csv file - file name is UserDataFile\r\n\r\n{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a6a1a428-f340-43b6-b301-c6dfa3ef38a9",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "\tpm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Check user response data\", function () {\r",
                  "\tvar jsonData = pm.response.json();\r",
                  "\tpm.expect(jsonData.name).to.eql (pm.iterationData.get(\"name\"));\r",
                  "\t\tpm.expect(jsonData.gender).to.eql (pm.iterationData.get(\"gender\"));\r",
                  "\t\tpm.expect(jsonData.status).to.eql (pm.iterationData.get(\"status\"));\r",
                  "           \r",
                  "           \r",
                  "// FETCH THE EXPECTED EMAIL:\r",
                  "\t\t  const rawJSONRequestBody =  pm.request.body.raw ; // JSON string fetched\r",
                  "\t\t\t // convert json string to javascript object \r",
                  "\t\t\t      const requestBody =  JSON.parse(rawJSONRequestBody);\r",
                  "\t\t\t     const expectedemail =   requestBody.email;\r",
                  "\t\t\t\t\t console.log (\"expected email ======= \" + expectedemail);\r",
                  "\t\t\t\t\t pm.expect(jsonData.email).to.eql(expectedemail);\r",
                  "\r",
                  "});\r",
                  "\r",
                  "\r",
                  "                const response = pm.response.json();\r",
                  "                 const userID = response.id ; \r",
                  "                 pm.variables.set(\"user_id\" ,userID ) ; \r",
                  "\r",
                  "   \r",
                  "\r",
                  "\t\t\t\t\t\t\t  \r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "d260df51-92c6-47cc-acd1-3620aae663ed"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer c257939495ba279bcf061d9ff92cf04ba1132364f95eda2484cba0136dfec383"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "75fc6359-ae23-49e5-ae90-38b4eb29a98c",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "124",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "\r\n\n\r\n{\r\n    \"name\": \"pashika\",\r\n    \"gender\": \"female\",\r\n    \"email\": \"Vern.Lemke59@yahoo.com\",\r\n    \"status\": \"inactive\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "abaa9553-46df-4364-bf18-3f32650b68c9",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 29 Oct 2025 17:25:54 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "102"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"c91d5d56f060db05d11b8958f92de652\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "location",
              "value": "https://gorest.co.in/public/v2/users/8216574"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "86"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "4"
            },
            {
              "key": "x-request-id",
              "value": "b372a711-1174-4442-ac82-1bef209fcb6c"
            },
            {
              "key": "x-runtime",
              "value": "0.091861"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Nel",
              "value": "{\"report_to\":\"cf-nel\",\"success_fraction\":0.0,\"max_age\":604800}"
            },
            {
              "key": "Report-To",
              "value": "{\"group\":\"cf-nel\",\"max_age\":604800,\"endpoints\":[{\"url\":\"https://a.nel.cloudflare.com/report/v4?s=VAzwfY21Y1WVYJTqN3%2BZ4HOuinvzZMYdmeYheYOHwHxaPgU%2BZq5KawJ3I%2F1OyMrTdoHJmZz9okVXMAWgpH59xv4b0GyOvPVEaIaMtw%3D%3D\"}]}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "99645ff8e899e215-MRS"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              56,
              50,
              49,
              54,
              53,
              55,
              52,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              112,
              97,
              115,
              104,
              105,
              107,
              97,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              86,
              101,
              114,
              110,
              46,
              76,
              101,
              109,
              107,
              101,
              53,
              57,
              64,
              121,
              97,
              104,
              111,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              105,
              110,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 479,
          "responseSize": 102
        },
        "id": "158da884-e376-4794-9375-06f235cd4be6",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Check user response data",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "04a03ff0-7339-4932-a07c-bf2ef356a09c",
          "length": 2,
          "cycles": 3,
          "position": 1,
          "iteration": 2,
          "httpRequestId": "f9942d40-a981-4c95-8fc9-d535829beb84"
        },
        "item": {
          "id": "9f0aae1a-dd7b-4490-b2a7-981f5eeb18ef",
          "name": "Update a User By id",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{user_id}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "\r\n{\r\n \"status\" : \"{{newstatus}}\"\r\n\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "437b66fb-9e6a-4bc7-b8ff-0e99aa1efb9a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "\r",
                  "\r",
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Is user status updated\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.status).to.eql (pm.iterationData.get (\"newstatus\")) ;\r",
                  "});"
                ],
                "_lastExecutionId": "1e376730-fb6d-4204-9010-b4dea6b884c2"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              "8216574"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer c257939495ba279bcf061d9ff92cf04ba1132364f95eda2484cba0136dfec383"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3f0fbdb7-4e75-4738-beb0-83a5a25863e5",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "30",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "\r\n{\r\n \"status\" : \"active\"\r\n\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "292555b8-47c2-4dd0-91e2-3610766ce046",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 29 Oct 2025 17:25:55 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"3497e9e091cf94fac56c698f22e05cd7\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "85"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "4"
            },
            {
              "key": "x-request-id",
              "value": "7cbe78b5-e25b-437a-9297-5eb34e0f14f3"
            },
            {
              "key": "x-runtime",
              "value": "0.077138"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Nel",
              "value": "{\"report_to\":\"cf-nel\",\"success_fraction\":0.0,\"max_age\":604800}"
            },
            {
              "key": "Report-To",
              "value": "{\"group\":\"cf-nel\",\"max_age\":604800,\"endpoints\":[{\"url\":\"https://a.nel.cloudflare.com/report/v4?s=0rRprPwlj5Ln%2FJ9P19A6hG3KEgqvw4tDAmb73PAkQoB%2FZ9A7C%2FwomAEx4zlJKJ7vATZgTpAFcbzrdpQXTSRJJtOTRG2ERKUiEsyLIA%3D%3D\"}]}"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "99645ffc0970e215-MRS"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              56,
              50,
              49,
              54,
              53,
              55,
              52,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              112,
              97,
              115,
              104,
              105,
              107,
              97,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              86,
              101,
              114,
              110,
              46,
              76,
              101,
              109,
              107,
              101,
              53,
              57,
              64,
              121,
              97,
              104,
              111,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 489,
          "responseSize": 100
        },
        "id": "9f0aae1a-dd7b-4490-b2a7-981f5eeb18ef",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Is user status updated",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 592
    },
    "failures": [],
    "error": null
  }
}